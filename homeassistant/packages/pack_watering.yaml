homeassistant:
  customize:
    sensor.evapotraspirazione_0d:
      icon: 'mdi:weather-hail'
    sensor.evapotraspirazione_1d:
      icon: 'mdi:weather-hail'

sensor:
  - platform: command_line
    name: "Evapotraspirazione 0d"
    command: 'python3 /config/python_scripts/et0.py {{state_attr("zone.home", "latitude")}} {{state_attr("zone.home", "longitude")}} 0.8 {{ states("sensor.dark_sky_daytime_high_temperature_0d")|float(0) }} {{ states("sensor.dark_sky_overnight_low_temperature_0d")|float(0) }}'
  #   command: 'python3 /config/python_scripts/et0.py 37.586745 15.0884693 0.8 28.0 18.4'
    #icon_template: mdi:router-wireless
    value_template: "{{ value }}"
    unit_of_measurement: "mm"
    scan_interval: 1800

# {% if (states("sensor.dark_sky_daytime_high_temperature_0d") | lower == 'unknown') %} {{ 20 }}
# {% else %} {{ (states("sensor.dark_sky_daytime_high_temperature_0d") | float(0)) }}
# {% endif %}

  - platform: command_line
    name: "Evapotraspirazione 1d"
    command: 'python3 /config/python_scripts/et0.py {{state_attr("zone.home", "latitude")}} {{state_attr("zone.home", "longitude")}} 0.8 {{ states("sensor.dark_sky_daytime_high_temperature_1d")|float(0) }} {{ states("sensor.dark_sky_overnight_low_temperature_1d")|float(0) }}'
  #   command: 'python3 /config/python_scripts/et0.py 37.586745 15.0884693 0.8 28.0 18.4'
    value_template: "{{ value }}"
    unit_of_measurement: "mm"
    scan_interval: 1800
  # {{ (states("sensor.evapotraspirazione_0d") | float(0) / 0.20) | round() }}
  # {{ (states("sensor.evapotraspirazione_0d") | float(0) / 0.20) | round() | multiply(60) | timestamp_custom('%H:%M',false) }}
  #   L'evapotraspirazione è una variabile o grandezza fisica usata in agrometeorologia. Consiste nella quantità d'acqua (riferita all'unità di tempo) che dal terreno passa nell'aria allo stato di vapore per effetto congiunto della traspirazione, attraverso le piante, e dell'evaporazione, direttamente dal terreno. È spesso indicata nei manuali con la sigla ET.
  
  - platform: template
    sensors:
      watering_month_index:
        friendly_name: "Watering index monthly based"
        value_template: >-
          {% if   now().month <=  2 %} {{ 0.0 }}
          {% elif now().month ==  3 %} {{ 0.0 }}
          {% elif now().month ==  4 %} {{ 0.3 }}
          {% elif now().month ==  5 %} {{ 0.5 }}
          {% elif now().month ==  6 %} {{ 0.7 }}
          {% elif now().month ==  7 %} {{ 0.9 }}
          {% elif now().month ==  8 %} {{ 1.0 }}
          {% elif now().month ==  9 %} {{ 0.7 }}
          {% elif now().month == 10 %} {{ 0.3 }}
          {% elif now().month >= 11 %} {{ 0.0 }}
          {% endif %}
        #entity_id: sensor.date ##deprecated
  
  - platform: template
    sensors:
      watering_duration:
        friendly_name: "Duration of watering"
        value_template: >-
          {% if ((( (states('sensor.evapotraspirazione_0d') | float(0)) - (states('sensor.dark_sky_daily_max_precip_intensity_0d') | float(0))) / 0.20 ) * (states('sensor.watering_month_index') | float(0))) | round() > 30 %}  {{ 30 }}
          {% elif ((( (states('sensor.evapotraspirazione_0d') | float(0)) - (states('sensor.dark_sky_daily_max_precip_intensity_0d') | float(0))) / 0.20 ) * (states('sensor.watering_month_index') | float(0))) | round() < 0 %} {{ 0 }}
          {% else %} {{ ((( (states('sensor.evapotraspirazione_0d') | float(0)) - (states('sensor.dark_sky_daily_max_precip_intensity_0d') | float(0))) / 0.20 ) * (states('sensor.watering_month_index') | float(0))) | round() }}
          {% endif %}
        unit_of_measurement: "minutes"
        #entity_id: [sensor.evapotraspirazione_0d, sensor.dark_sky_daily_max_precip_intensity_0d, sensor.watering_month_index] ##deprecated

input_number:
  watering_duration_zone_1:
    name: Watering duration for zone 1
    # initial: 0
    # step: 1
    min: 0
    max: 30
    unit_of_measurement: "minutes"

  watering_duration_zone_2:
    name: Watering duration for zone 2
    # initial: 0
    # step: 1
    min: 0
    max: 30
    unit_of_measurement: "minutes"

  waiting_after_rain:
    name: Waiting after rain
    # initial: 0
    step: 6
    min: 0
    max: 72
    unit_of_measurement: "hours"

input_datetime:
  last_raining_day:
    name: Last raining day
    has_date: true
    has_time: true

  last_watering_run_zone_1:
    name: Last watering run for zone 1
    has_date: true
    has_time: true

  last_watering_run_zone_2:
    name: Last watering run for zone 2
    has_date: true
    has_time: true

#   only_time:
#     name: Input with only time
#     has_date: false
#     has_time: true

input_boolean:
  watering_zone_1:
    name: Irrigazione zona 1
    initial: off
    icon: mdi:flower

  watering_zone_2:
    name: Irrigazione zona 2
    initial: off
    icon: mdi:flower

timer:
  watering_zone_1:
    name: Time remaining
    duration: 600 # Updated this to the number of seconds you wish

  watering_zone_2:
    name: Time remaining
    duration: 600 # Updated this to the number of seconds you wish

automation:
  - id: start_watering_zone_1
    alias: Watering - Start watering for zone 1
    #hide_entity: true
    trigger:
      platform: state
      entity_id: input_boolean.watering_zone_1
      to: 'on'
    action:
    # - service: switch.turn_on
    #   entity_id: switch.sonoff_1000942df6_1
    - service: script.start_watering_zone_1
      data: {}
    - service: timer.start
      data_template:
        entity_id: timer.watering_zone_1
        #duration: '{{ states(''input_datetime.only_time'') }}'
        duration: '00:{{ states(''input_number.watering_duration_zone_1'') | round() }}:00'

  - id: start_watering_zone_2
    alias: Watering - Start watering for zone 2
    #hide_entity: true
    trigger:
      platform: state
      entity_id: input_boolean.watering_zone_2
      to: 'on'
    action:
    # - service: switch.turn_on
    #   entity_id: switch.sonoff_1000942df6_2
    - service: script.start_watering_zone_2
      data: {}
    - service: timer.start
      data_template:
        entity_id: timer.watering_zone_2
        duration: '00:{{ states(''input_number.watering_duration_zone_2'') | round() }}:00'

  - id: stop_watering_zone_1
    alias: Watering - Stop watering for zone 1
    trigger:
    - entity_id: input_boolean.watering_zone_1
      platform: state
      to: 'off'
    action:
    # - service: switch.turn_off
    #   entity_id: switch.sonoff_1000942df6_1
    - service: script.stop_watering_zone_1
      data: {}
    - data:
        entity_id: timer.watering_zone_1
      service: timer.cancel
    #hide_entity: true

  - id: stop_watering_zone_2
    alias: Watering - Stop watering for zone 2
    trigger:
    - entity_id: input_boolean.watering_zone_2
      platform: state
      to: 'off'
    action:
    # - service: switch.turn_off
    #   entity_id: switch.sonoff_1000942df6_2
    - service: script.stop_watering_zone_2
      data: {}
    - data:
        entity_id: timer.watering_zone_2
      service: timer.cancel
    #hide_entity: true

  - id: stop_watering_zone_1_timer
    alias: Watering - Stop watering for zone 1 by timer
    #hide_entity: true
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.watering_zone_1
    action:
    # - service: switch.turn_off
    #   entity_id: switch.sonoff_1000942df6_1
    - service: script.stop_watering_zone_1
      data: {}
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.watering_zone_1

  - id: stop_watering_zone_2_timer
    alias: Watering - Stop watering for zone 2 by timer
    #hide_entity: true
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.watering_zone_2
    action:
    # - service: switch.turn_off
    #   entity_id: switch.sonoff_1000942df6_2
    - service: script.stop_watering_zone_2
      data: {}
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.watering_zone_2